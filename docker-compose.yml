services:
  scoreboard:
    image: ghcr.io/nglhrdt/scoreboard:latest
    depends_on:
      - db
    networks:
      - web
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.scoreboard.rule=Host(`scoreboard.${HOSTNAME}`)' # Set SCOREBOARD_HOSTNAME in your environment or .env file
      - 'traefik.http.services.scoreboard.loadbalancer.server.port=3000'
      - 'traefik.http.routers.scoreboard.entrypoints=websecure'
      - 'traefik.http.routers.scoreboard.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.scoreboard.tls=true'
      - 'traefik.http.routers.scoreboard.middlewares=scoreboard-cors@docker'
      - 'traefik.http.middlewares.scoreboard-cors.headers.accesscontrolalloworiginlist=*'
      - 'traefik.http.middlewares.scoreboard-cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS'
      - 'traefik.http.middlewares.scoreboard-cors.headers.accesscontrolallowheaders=*'

  mosquitto:
    image: eclipse-mosquitto:latest
    restart: unless-stopped
    networks:
      - web
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    labels:
      - 'traefik.enable=true'
      - 'traefik.tcp.routers.mqtt.rule=HostSNI(`mqtt.${HOSTNAME}``)' # Replace with your MQTT hostname (e.g., mqtt.yourdomain.com)
      - 'traefik.tcp.routers.mqtt.entrypoints=mqttsecure'
      - 'traefik.tcp.routers.mqtt.service=mosquitto_svc'
      - 'traefik.tcp.routers.mqtt.tls=true'
      - 'traefik.tcp.routers.mqtt.tls.certresolver=letsencrypt'
      - 'traefik.tcp.services.mosquitto_svc.loadbalancer.server.port=1883' # Mosquitto's internal non-TLS port
      - 'traefik.tcp.routers.mqttws.rule=HostSNI(`mqttws.${HOSTNAME}`)' # Replace with your WebSocket MQTT hostname (e.g., mqttws.yourdomain.com)
      - 'traefik.tcp.routers.mqttws.entrypoints=mqttws'
      - 'traefik.tcp.routers.mqttws.service=mosquitto_ws_svc'
      - 'traefik.tcp.routers.mqttws.tls=true'
      - 'traefik.tcp.routers.mqttws.tls.certresolver=letsencrypt'
      - 'traefik.tcp.services.mosquitto_ws_svc.loadbalancer.server.port=8083' # Mosquitto WebSocket port

  db:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    networks:
      - web

  traefik:
    image: traefik:v3.3
    networks:
      - web
    command:
      - '--api.insecure=true'
      - '--entryPoints.web.address=:80'
      - '--entryPoints.websecure.address=:443'
      - '--entrypoints.mqttsecure.address=:8883' # New entrypoint for MQTT TLS
      - '--entrypoints.mqttws.address=:8083' # New entrypoint for MQTT WebSocket
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--certificatesresolvers.letsencrypt.acme.tlschallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}' # Set LETSENCRYPT_EMAIL in your environment or .env file
      - '--certificatesresolvers.letsencrypt.acme.storage=/traefik/acme.json'
    volumes:
      - 'traefik_letsencrypt:/traefik'
      - '/var/run/docker.sock:/var/run/docker.sock'
    ports:
      - '80:80'
      - '443:443'
      - '8883:8883'
      - '8083:8083'

networks:
  web:

volumes:
  mongo_data:
  traefik_letsencrypt:
  mosquitto_conf: # Although defined via bind mount, can be listed here for clarity or if switched later
  mosquitto_data:
  mosquitto_log:
